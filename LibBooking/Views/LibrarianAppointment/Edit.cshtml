@model LibBooking.Models.LibrarianAppointmentViewModel

@{
    ViewData["Title"] = "Edit Appointment";
}

<h1>Edit Appointment</h1>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<form asp-action="UpdateAppointment" asp-route-id="@Model.ID" method="post">
    <div class="form-group">
        <label asp-for="LibrarianID" class="control-label"></label>
        <select asp-for="LibrarianID" class="form-control" asp-items="Model.LibrarianSelectList"></select>
    </div>
    <div class="form-group">
        <label asp-for="UserEmail" class="control-label"></label>
        <input asp-for="UserEmail" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="AppointmentDate" class="control-label"></label>
        <input asp-for="AppointmentDate" class="form-control" type="date" />
    </div>
    <div class="form-group">
        <label asp-for="StartTime" class="control-label"></label>
        <input asp-for="StartTime" class="form-control timepicker" type="time" />
    </div>
    <div class="form-group">
        <label asp-for="EndTime" class="control-label"></label>
        <input asp-for="EndTime" class="form-control timepicker" type="time" />
    </div>
    <div class="form-group">
        <label asp-for="Notes" class="control-label"></label>
        <textarea asp-for="Notes" class="form-control"></textarea>
    </div>
    <input type="hidden" asp-for="ID" />
    <button type="submit" class="btn btn-primary">Save</button>
</form>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

    <script>
               .then(response => response.json().then(data => {
                   if (!response.ok) {
                       throw new Error(data.message || 'Failed to update appointment.');
                   }
                   window.location.href = '/api/LibrarianAppointment/admindashboard';
               }))
            .catch(error => {
                console.error('Error updating appointment:', error);
                showError(error.message);
            });

        function showError(message) {
            const errorMessage = document.getElementById('error-message');
            errorMessage.innerText = message;
            errorMessage.style.display = 'block';
        }

        document.addEventListener('DOMContentLoaded', function () {
            flatpickr(".timepicker", {
                enableTime: true,
                noCalendar: true,
                dateFormat: "H:i",
                time_24hr: false
            });
        });
    </script>
}
