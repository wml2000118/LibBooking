@model LibBooking.Models.LibrarianAppointmentViewModel

@{
    ViewData["Title"] = "Prepare Your Appointment";
}

<h1>Prepare Your Appointment</h1>

<div class="container">
    @if (!string.IsNullOrEmpty(ViewBag.Message))
    {
        <div class="alert @(ViewBag.Message.Contains("成功") ? "alert-success" : "alert-danger")">
            @ViewBag.Message
        </div>
    }

    <!-- 使用 JavaScript 和 API 调用代替表单提交 -->
    <div class="form-group">
        <label for="librarianName">Librarian:</label>
        <input type="text" id="librarianName" name="LibrarianName" value="@Model.LibrarianName" class="form-control" readonly />
    </div>

    <div class="form-group">
        <label for="appointmentDate">Date:</label>
        <input type="text" id="appointmentDate" name="AppointmentDate" value="@Model.AppointmentDate.ToString("yyyy-MM-dd")" class="form-control" readonly />
    </div>

    <div class="form-group">
        <label for="time">Time:</label>
        <input type="text" id="time" name="Time" value="@Model.StartTime.ToString(@"hh\:mm") - @Model.EndTime.ToString(@"hh\:mm")" class="form-control" readonly />
    </div>

    <div class="form-group">
        <label for="inquiry">Your Inquiry:</label>
        <input type="text" id="inquiry" name="Notes" value="@Model.Notes" class="form-control" placeholder="Enter your inquiry" />
    </div>

    <div class="form-group">
        <label for="userEmail">Please enter your email:</label>
        <input type="email" id="userEmail" name="UserEmail" class="form-control" value="@Model.UserEmail" required />
    </div>

    <button id="confirmButton" class="btn btn-primary">Confirm Appointment</button>
</div>

@section Scripts {
    <script>
        // 监听确认按钮点击事件
        document.getElementById("confirmButton").addEventListener("click", async function (event) {
            event.preventDefault(); // 阻止默认的按钮行为

            const data = {
                LibrarianID: @Model.LibrarianID,  // Librarian ID
                LibrarianName: document.getElementById("librarianName").value,
                AppointmentDate: document.getElementById("appointmentDate").value,
                StartTime: document.getElementById("time").value.split(" - ")[0] + ":00",
                EndTime: document.getElementById("time").value.split(" - ")[1] + ":00",
                Notes: document.getElementById("inquiry").value,
                UserEmail: document.getElementById("userEmail").value
            };

            try {
                const response = await fetch('/api/LibrarianAppointment/confirm', { // 确保 API 路径正确
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();
                if (response.ok) {
                    Swal.fire({
                        icon: 'success',
                        title: '预约成功',
                        text: result.message || "预约已成功确认！",
                        showConfirmButton: true,
                        timer: 3000
                    }).then(() => {
                        // 确认后跳转到创建页面或其他合适页面
                        window.location.href = '/api/LibrarianAppointment/create';
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: '错误',
                        text: '错误: ' + result.message,
                        showConfirmButton: true,
                        timer: 3000
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: '错误',
                    text: '处理请求时发生错误。',
                    showConfirmButton: true,
                    timer: 3000
                });
            }
        });

        // 使用 SweetAlert2 显示 TempData 消息
        document.addEventListener("DOMContentLoaded", function () {
            const message = '@TempData["Message"]';
            const messageType = '@TempData["MessageType"]';

            if (message) {
                if (messageType === "success") {
                    Swal.fire({
                        icon: 'success',
                        title: '成功',
                        text: message,
                        showConfirmButton: true,
                        timer: 3000
                    });
                } else if (messageType === "error") {
                    Swal.fire({
                        icon: 'error',
                        title: '错误',
                        text: message,
                        showConfirmButton: true,
                        timer: 3000
                    });
                }
            }
        });
    </script>
}
